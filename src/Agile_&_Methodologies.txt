Agile Life Cycle:
1) Plan
2) Design
3) Develop
4) Test
5) Deploy
6) Review


4 Pillars:
* Individual over processes and tools (Team Collaboration over by doing by the book)
* Working Software over Documentation (Develop a good software)
* Customer Collaboration over contract negotiation (Customer First)
* Responding to change over following a plan (Freedom and Flexibility to shift strategies without derailing an entire project)

Other:
* Welcome changes even late
* Break the silos (Collaborate more frequently)
* Build projects around motivated individual
* Effective communication is face-to-face
* Working software is the primary measure of progress
* Maintain a sustainable working pace (No burn outs)
....


*** Usage in Workflows that is constantly changing, no waterfall model here.


Methodologies:

1) Kanban (trader): 
* Card on Boards by stages
* Very Visual
* Backlog
* Can follow a RoadMap
E.g.:
Requested ==> Development ==> Code Review ==> Testing ==> Deployment ==> Done

2) Scrum 
* Small Team
* Sprints (2 Weeks cycles):
    - Sprint Planning (Kick offs Sprint, What & How, Effort Pointing)
        * Sprint Scope
        * Which tasks and who responsible for it 
        * Establish goals for the sprint, deadlines, and metrics to success
        * Roadblocks, issues, or scheduling conflicts for the current sprint
    - Sprint Retrospective: (Consistent Assessment)
        * Good
        * Points to improve 
        * Commitments and possible solutions
    - Daily Meeting - Stand Up Meetings (Share Updates, and Check-in with the rest of the team) 15min max
        * What has been accomplished so far?
        * What’s currently being worked on?
        * What’s up next?
        * Are there any obstacles or impediments or blockers preventing progress?

3) XP - Extreme Programming  (How will be done)
* communication
* Simplicity
* Feedback
* Courage
* Respect