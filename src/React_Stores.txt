/*

1 - Redux
2 - Flux
3 - MobX
4 - Context API


=====================

1 - Redux (store, state tree, action, dispatch, reducer):

- Store: 
* is a reference to a only State tree Object 
* API is {subscribe, dispatch, getState}
```
function reducerName(state = {...}, action) {
  switch(action.type){
    case 'whatever':
      return { ... } // Alterated state; 
      ...
    default:
      return state;
  }
}
let store = createStore(reducerName);
store.subcribe(() => store.getState);
store.dispatch({type: whatever}) type is the action type;
```

- State tree = State:
* is the object on the Store that will be updated
* contains only pain JS objects, arrays and primitives;

- Reducer: 
* is a function to updated the State Tree 
* ```function reducerName(State, action) => { return new State }```;
* Think as event listener with handle actions type.

- Action: 
* is a object to manage the reduce changes returning a new State Tree Changed;
* usually text with domain and eventName, like `domain/eventName`
```
const addTodo = text => {
  return {
    type: 'todos/todoAdded',
    payload: text
  }
}
```
